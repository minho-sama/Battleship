{"version":3,"sources":["factories/gameBoard.js","factories/player.js","factories/ship.js","components/GameControl.js","App.js","reportWebVitals.js","index.js"],"names":["GameBoard","ownerName","boardInfo","board","shipsLeft","owner","lastShot","hit","location","length","i","push","ship","beenHit","fillBoard","allShipsSunk","cell","receiveHit","coords","placeShip","startCoord","isVertical","id","Player","name","playerInfo","shots","getRandMove","randMove","getRandomNum","includes","num","Math","floor","random","AI","figureNextMove","nextMove","timeOut","whileTrue","resetShots","Ship","hitLocations","Array","position","isSunk","every","element","takenCells","GameControl","useState","isGame","setIsGame","playerBoard","setPlayerBoard","aiBoard","setAiBoard","playerShipsArray","setPlayerShipsArray","aiShipsArray","setAiShipsArray","isPlayerTurn","setIsPlayerTurn","setAI","undefined","winner","setWinner","setUpGame","generateShips","shipsArr","ceil","Set","size","placeShipsOnBoard","array","decideCellColorAi","decideCellColorPlayer","handleAttack","boardOwner","cloneDeep","playRound","coord","setTimeout","useEffect","className","map","onClick","App","target","rel","href","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"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","file":"static/js/main.83bc1c8f.chunk.js","sourcesContent":["export const GameBoard = (ownerName) => {\r\n    const boardInfo = {\r\n        board: [],\r\n        shipsLeft: true,\r\n        owner: ownerName,\r\n        lastShot: {\r\n            hit:false,\r\n            location:false\r\n        }\r\n\r\n    }\r\n\r\n    const fillBoard = () => {\r\n        for (let i = 0; i < 100; i++){\r\n            boardInfo.board.push({ship: false, beenHit: false})\r\n        }\r\n    }\r\n\r\n    if (boardInfo.board.length === 0){\r\n        fillBoard()\r\n    }\r\n\r\n    const allShipsSunk = () => {\r\n        for (let cell of boardInfo.board) {\r\n\r\n            if(cell.ship !== false && !cell.beenHit){\r\n                boardInfo.shipsLeft = true\r\n                return\r\n            }\r\n\r\n        }\r\n        boardInfo.shipsLeft = false\r\n    };\r\n\r\n    const receiveHit = (coords) => {\r\n        boardInfo.board[coords].beenHit = true;\r\n\r\n        //for AI to decide nextMove\r\n        if(boardInfo.board[coords].ship){\r\n            boardInfo.lastShot.hit = true\r\n            boardInfo.lastShot.location = coords;\r\n        }\r\n        allShipsSunk();\r\n    }\r\n\r\n    const placeShip = (ship, startCoord) => {\r\n        if (ship.isVertical){\r\n            for (let i = 0; i < ship.length; i++){\r\n                boardInfo.board[startCoord + i * 10].ship = ship.id \r\n            }\r\n        }\r\n        else{\r\n            for (let i = 0; i < ship.length; i++) {\r\n                boardInfo.board[startCoord + i].ship = ship.id\r\n            }\r\n        }\r\n    }\r\n\r\n    return {boardInfo, receiveHit, placeShip, allShipsSunk}\r\n\r\n}\r\n\r\nexport default GameBoard","//csinÃ¡lni egy ai-t ami figyelembe veszi h vertical v horizontal\r\n\r\nconst Player = (name) => {\r\n\r\n    const playerInfo = {\r\n        name,\r\n        shots: []\r\n    };\r\n\r\n    const getRandMove = () => {\r\n        let randMove = getRandomNum(100)\r\n        while(playerInfo.shots.includes(randMove)){\r\n            randMove = getRandomNum(100)\r\n        }\r\n        playerInfo.shots.push(randMove)\r\n        return randMove;\r\n    }\r\n\r\n    const getRandomNum = (num) => {\r\n        return Math.floor(Math.random() * num)\r\n    }\r\n\r\n    const resetShots = () => {\r\n        playerInfo.shots.length = 0;\r\n    }\r\n\r\n    const AI = (lastShot) => {\r\n        if (lastShot.hit){\r\n            const figureNextMove = (lastShot) => {\r\n                let randomNum = getRandomNum(4);\r\n                let nextMove;\r\n                // eslint-disable-next-line default-case\r\n                switch(randomNum) {\r\n                    case 0: \r\n                        nextMove = lastShot.location + 1;\r\n                        break;\r\n                    case 1: \r\n                        nextMove = lastShot.location -1;\r\n                        break;\r\n                    case 2: \r\n                        nextMove = lastShot.location + 10;\r\n                        break;\r\n                    case 3: \r\n                        nextMove = lastShot.location - 10;\r\n                        break;\r\n                }\r\n                return nextMove\r\n            };\r\n\r\n            let nextMove = figureNextMove(lastShot);\r\n            let timeOut = 0;\r\n            let whileTrue = true;\r\n\r\n            while (playerInfo.shots.includes(nextMove) || nextMove > 99 || nextMove < 0){\r\n                nextMove = figureNextMove(lastShot);\r\n                timeOut++;\r\n                if (timeOut === 40){\r\n                    whileTrue = false\r\n                    break;\r\n                }\r\n            };\r\n            timeOut = 0;\r\n            if (!whileTrue) {\r\n                return getRandMove();\r\n            } else {\r\n                playerInfo.shots.push(nextMove);\r\n                return nextMove;\r\n                } \r\n\r\n        } else {\r\n            return getRandMove()\r\n        }\r\n\r\n    };\r\n\r\n    return {\r\n        playerInfo,\r\n        AI,\r\n        getRandMove,\r\n        resetShots,\r\n    }\r\n}\r\n\r\nexport default Player","const Ship = (id, length, isVertical = false, startCoord) => {\r\n    const hitLocations = Array(length);\r\n\r\n    const hit = (position) => {\r\n        hitLocations[position] = 'x'\r\n    }\r\n\r\n    const isSunk = () => hitLocations.every( element => element === 'x')\r\n\r\n    const takenCells = (startCoord) => {\r\n        let takenCells = [];\r\n        if(isVertical){\r\n            for(let i = 0; i < length; i++){\r\n                takenCells.push(startCoord + i * 10)\r\n            }   \r\n        } else{\r\n            for(let i = 0; i < length; i++){\r\n                takenCells.push(startCoord + i)\r\n            }\r\n        }\r\n        return takenCells\r\n    }\r\n    \r\n    return {\r\n        id, length, isVertical, startCoord, hitLocations, hit, isSunk, takenCells\r\n    }\r\n}\r\n\r\nexport default Ship","import './GameControl.css'\r\nimport React, {useState, useEffect} from 'react'\r\nimport GameBoard from '../factories/gameBoard'\r\nimport Player from '../factories/player'\r\nimport Ship from '../factories/ship'\r\nimport {BsSquare} from 'react-icons/bs'\r\nimport { cloneDeep } from 'lodash';\r\n\r\nconst GameControl = () => {\r\n    const [isGame, setIsGame] = useState(false)\r\n    const [playerBoard, setPlayerBoard] = useState(() => GameBoard('player'));\r\n    const [aiBoard, setAiBoard] = useState(() => GameBoard('ai'));\r\n    const [playerShipsArray, setPlayerShipsArray] = useState([]);\r\n    const [aiShipsArray, setAiShipsArray] = useState([]);  \r\n\r\n    const [isPlayerTurn, setIsPlayerTurn] = useState(true)\r\n    const [AI, setAI] = useState(() => Player('ai'))\r\n\r\n    const [winner, setWinner] = useState(undefined)\r\n \r\n    const isVertical = () => {\r\n        if(Math.random() > 0.5){\r\n            return true\r\n        } \r\n        return false\r\n    }\r\n\r\n    function startGame () {\r\n        setIsGame(!isGame)\r\n        setUpGame()\r\n    }\r\n\r\n    //for the restart button\r\n    function setUpGame(){\r\n        generateShips('player')\r\n        generateShips('ai')\r\n    }\r\n    placeShipsOnBoard(playerShipsArray, playerBoard)\r\n    placeShipsOnBoard(aiShipsArray, aiBoard)\r\n\r\n    function generateShips(owner) {\r\n        let shipsArr = [];\r\n        let takenCells = [];\r\n\r\n        do{ //if 2 ships share the same coordinate, the takenCells array will have the shared coordinate twice\r\n            shipsArr = [];\r\n            takenCells = [];\r\n\r\n            while(shipsArr.length < 5){\r\n\r\n                for(let i = 1; i < 6; i++){\r\n                    let startCoord = Math.floor(Math.random() * 100);\r\n                    const ship = Ship(i, i, isVertical(), startCoord)\r\n                    \r\n                    //cheking if ship coordinates are not on board\r\n                    if(ship.isVertical && ship.startCoord + (ship.length - 1) * 10 > 99){\r\n                        while(ship.startCoord + ship.length * 10 > 99){\r\n                            ship.startCoord = Math.floor(Math.random() * 100);\r\n                        }\r\n                    } else{\r\n                        if(ship.startCoord + ship.length > 99){\r\n                            while(ship.startCoord + ship.length > 99){\r\n                                ship.startCoord = Math.floor(Math.random() * 100);\r\n                            }\r\n                        }\r\n                    }\r\n                    //check for overflow to next row \r\n                    if(true){\r\n\r\n                        if(!ship.isVertical && ship.startCoord + ship.length > Math.ceil((ship.startCoord+1)/10)*10){\r\n                            while(ship.startCoord + ship.length > Math.ceil((ship.startCoord+1)/10)*10){\r\n                                ship.startCoord = Math.floor(Math.random() * (100 - ship.length));\r\n                            }\r\n                        }\r\n                        //pushing all the ship coordinates to the array\r\n                        takenCells.push(...ship.takenCells(ship.startCoord))\r\n                    }\r\n\r\n                    shipsArr.push(ship)\r\n                }\r\n            }\r\n        } while(takenCells.length !== new Set(takenCells).size)\r\n        \r\n\r\n        if(owner === 'player') {\r\n            setPlayerShipsArray(shipsArr)\r\n        } else if (owner === 'ai'){\r\n            setAiShipsArray(shipsArr)\r\n        }\r\n    }\r\n\r\n    function placeShipsOnBoard(array, board){\r\n        for (let i = 0; i < array.length; i++){\r\n            board.placeShip(array[i], array[i].startCoord)\r\n        }\r\n    }\r\n\r\n    function decideCellColorAi (cell) {\r\n        if(cell.beenHit && cell.ship){\r\n            return 'red-ai'\r\n        }\r\n        else if(cell.beenHit && !cell.ship){\r\n            return 'blue-ai'\r\n        } else{\r\n            return 'white-ai'\r\n        }\r\n    }\r\n\r\n    function decideCellColorPlayer (cell) {\r\n        if( cell.ship && cell.beenHit){\r\n            return 'red'\r\n        }\r\n        else if(!cell.ship && cell.beenHit){\r\n            return 'blue'\r\n        }\r\n        else if(cell.ship){\r\n            return 'white'\r\n        }\r\n    }  \r\n\r\n    //gameloop\r\n\r\n    function handleAttack(boardOwner, i){\r\n        if(boardOwner === \"ai\"){\r\n            aiBoard.boardInfo.board[i].beenHit = true //receiveHit[i]\r\n            setAiBoard(cloneDeep(aiBoard))\r\n        } else{\r\n            \r\n            playerBoard.boardInfo.board[i].beenHit = true //ai smart version\r\n\r\n            if(playerBoard.boardInfo.board[i].ship){\r\n                playerBoard.boardInfo.lastShot.hit = true\r\n                playerBoard.boardInfo.lastShot.location = i\r\n            } else{\r\n                playerBoard.boardInfo.lastShot.hit = false\r\n            }\r\n            setPlayerBoard(cloneDeep(playerBoard))      \r\n\r\n            //responsible for resetting\r\n            isGameOver()\r\n        }\r\n    }\r\n\r\n    function playRound (boardOwner, coord){\r\n        //attack ai's board\r\n        if(boardOwner === 'ai' && isPlayerTurn){\r\n            if(aiBoard.boardInfo.board[coord].beenHit === true) return //prevent hitting twice\r\n            handleAttack('ai', coord)\r\n            setIsPlayerTurn(!isPlayerTurn)\r\n        }\r\n        //attack player's board\r\n        else if (boardOwner === 'player' && !isPlayerTurn){\r\n            setTimeout(() => {\r\n                handleAttack('playerBoard', coord)\r\n                // setIsPlayerTurn(!isPlayerTurn)\r\n            }, 250)\r\n            setIsPlayerTurn(!isPlayerTurn)\r\n            return true\r\n        }\r\n    }\r\n\r\n    \r\n    useEffect(() => {\r\n        if(!isPlayerTurn){\r\n            // AIattack(AI.getRandMove()) \r\n            AIattack(AI.AI(playerBoard.boardInfo.lastShot)) //ai smart move\r\n        }\r\n    }, [isPlayerTurn])\r\n\r\n    function AIattack (coord){\r\n        if(!isPlayerTurn){\r\n            playRound('player', coord)\r\n        }\r\n    }\r\n\r\n    //cleaning up game and restart\r\n    const allShipsSunk = (board) => {\r\n        for (let cell of board.boardInfo.board) {\r\n            if(cell.ship !== false && !cell.beenHit){\r\n                return false\r\n            }\r\n        }\r\n        return true\r\n    };\r\n\r\n    function isGameOver(){\r\n        if(allShipsSunk(playerBoard)){\r\n            setWinner('ai')\r\n        }\r\n        else if(allShipsSunk(aiBoard)){\r\n            setWinner('player')\r\n        }\r\n    }\r\n\r\n    //ez csak a gombon lesz rajta\r\n    function resetGame(){\r\n        setWinner(undefined)\r\n        setPlayerBoard(()=> GameBoard('player'))\r\n        setAiBoard(()=> GameBoard('ai'))\r\n        setAI(() => Player('ai'))\r\n        setIsPlayerTurn(true)\r\n        setUpGame()\r\n    }\r\n\r\n    if(isGame && winner === undefined) {\r\n        return (\r\n            <>\r\n            <div className = 'board-container'>\r\n                <div className = \"container\">\r\n                    <h1>Your board</h1>\r\n                    <div className = \"board player-board\">\r\n                    {\r\n                        playerBoard.boardInfo.board.map((cell, i) => {\r\n                            return (\r\n                                <div className = {`cell player-cell ${decideCellColorPlayer(cell)}`}  key = {i}></div>\r\n                            )\r\n                        } )\r\n                    }\r\n                </div>\r\n\r\n                </div>\r\n                <div className = \"container\">\r\n                    <h1>Enemy's board</h1>\r\n                    <div className = \"board ai-board\">\r\n                    {\r\n                        aiBoard.boardInfo.board.map((cell, i) => { \r\n                            return (\r\n                                <div className = {`cell ai-cell ${decideCellColorAi(cell)}`}  key = {i} \r\n                                    onClick = {() => playRound('ai',i)}></div>\r\n                            )\r\n                        } )\r\n                    }\r\n                </div>\r\n\r\n                </div>\r\n            </div>\r\n            </>\r\n        )\r\n    }\r\n    else if(isGame && winner !== undefined){\r\n        return (\r\n            <div className = \"winnerBanner\">\r\n                {\r\n                    winner === 'ai' ? <h1>Game Over! AI won!</h1> : <h1>Congratz! You won!</h1>\r\n                }\r\n                <button onClick = {() => resetGame()}>Play Again</button>\r\n            </div>\r\n        )\r\n    }\r\n    else if(!isGame){\r\n        return(\r\n            <div className = \"welcome-board\">\r\n                <button className = \"start\" onClick = {() => startGame()}>Start game</button>\r\n                <p>Sink all enemy ships to win!</p>\r\n                <ul>\r\n                    <li id = \"white-grid\"><BsSquare/> Ship</li>\r\n                    <li id = \"blue-grid\"><BsSquare/> Water</li>\r\n                    <li id = \"red-grid\"><BsSquare/> Hit</li>\r\n                </ul>\r\n            </div>\r\n        )\r\n    }\r\n}\r\n\r\nexport default GameControl\r\n","import './App.css';\nimport {AiFillGithub} from 'react-icons/ai';\nimport GameControl from './components/GameControl';\n\nfunction App() {\n\n  return (\n    <>\n    <div className = \"header\">\n      <h1>Battleship</h1>\n      <a target = '_blank' rel = \"noreferrer\" href = \"https://github.com/minho-sama/Battleship\"><AiFillGithub id = \"git-icon\" size = \"40px\"/></a>\n    </div>\n\n    <GameControl/>\n\n    </>\n  );\n}\n\nexport default App;\n","const reportWebVitals = onPerfEntry => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry);\n      getFID(onPerfEntry);\n      getFCP(onPerfEntry);\n      getLCP(onPerfEntry);\n      getTTFB(onPerfEntry);\n    });\n  }\n};\n\nexport default reportWebVitals;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport reportWebVitals from './reportWebVitals';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root')\n);\n\nreportWebVitals();\n"],"sourceRoot":""}